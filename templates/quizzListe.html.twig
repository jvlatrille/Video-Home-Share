{% extends 'base_template.html.twig' %}

{% block content %}
<div class="container py-4">
    <!-- Barre de navigation -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <!-- Accueil -->
        <a href="index.php" class="btn btn-outline-primary d-flex align-items-center">
            <i class="bi bi-house-door-fill me-2"></i>Accueil
        </a>

        <!-- Vos quizz -->
        <a href="index.php?controleur=quizz&methode=afficherModif" 
            class="btn btn-success shadow-sm mx-auto" style="border-radius: 8px;">
            <i class="fas fa-play me-2"></i>Vos quizz
        </a>

        <!-- Créer un quizz -->
        <a href="index.php?controleur=quizz&methode=ajouterQuizz" class="btn btn-success shadow-sm ilFautPatienter">
            <i class="bi bi-plus-circle me-2"></i>Créer un quizz
        </a>
    </div>


    <!-- Titre principal -->
    <div class="text-center mb-4">
        <h1 class="fw-bold text-primary">Liste des Quiz</h1>
        <p class="text-muted">Explorez et participez aux quiz disponibles.</p>
    </div>

    <!-- Barre de recherche -->
    <div class="mb-4">
        <input type="text" id="searchQuiz" class="form-control" placeholder="Rechercher un quiz...">
    </div>

    <!-- Message de non-résultat -->
    <p id="noResultMessage" class="text-muted text-center" style="display: none;">Aucun quiz trouvé.</p>

    <!-- Liste des quiz -->
    <div id="quizList" class="quiz-list mb-4">
        {% for quiz in quizzListe %}
            <div class="quiz-item border border-1 border-primary rounded p-4 mb-3 shadow-lg bg-light d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="mb-1 text-dark" data-nom="{{ quiz.nom|lower }}" data-theme="{{ quiz.theme|lower }}">{{ quiz.nom }}</h4>
                    <p class="text-muted mb-1"><strong>Thème :</strong> <span class="badge bg-secondary">{{ quiz.theme }}</span></p>
                    <small class="text-muted">Créé par {{ quiz.pseudo }}</small>
                </div>
                <div class="d-flex gap-2">
                    <a href="index.php?controleur=quizz&methode=afficherQuizz&id={{ quiz.idQuizz }}" class="btn btn-primary">
                        <i class="bi bi-play-circle"></i> Voir le quiz
                    </a>
                </div>
            </div>
        {% else %}
            <p class="text-muted text-center">Aucun quiz disponible pour l'instant.</p>
        {% endfor %}
    </div>

    <!-- Pagination -->
    <nav aria-label="Quiz pagination" class="d-flex justify-content-center">
        <ul class="pagination" id="pagination">
        </ul>
    </nav>
</div>

<!-- Script pour la recherche en direct -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let searchInput = document.getElementById("searchQuiz");
        let quizList = document.getElementById("quizList");
        let quizItems = Array.from(quizList.getElementsByClassName("quiz-item"));
        let noResultMessage = document.getElementById("noResultMessage");
        let pagination = document.getElementById("pagination");
        let currentPage = 1;
        const itemsPerPage = 10;

        function showPage(page, filteredItems) {
            const items = filteredItems || quizItems;
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            
            quizList.innerHTML = "";
            
            items.slice(start, end).forEach(item => {
                quizList.appendChild(item.cloneNode(true));
            });
            
            updatePagination(items.length);
        }

        function updatePagination(totalItems) {
            const pageCount = Math.ceil(totalItems / itemsPerPage);
            pagination.innerHTML = "";
            
            if (pageCount <= 1) {
                pagination.style.display = "none";
                return;
            }
            
            pagination.style.display = "flex";

            // Bouton "Précédent"
            let prevLi = document.createElement("li");
            prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
            prevLi.innerHTML = `<a class="page-link" href="#">Précédent</a>`;
            prevLi.onclick = () => {
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage, filteredQuizItems);
                }
            };
            pagination.appendChild(prevLi);

            // Pages numérotées
            for (let i = 1; i <= pageCount; i++) {
                let li = document.createElement("li");
                li.className = `page-item ${currentPage === i ? 'active' : ''}`;
                li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
                li.onclick = () => {
                    currentPage = i;
                    showPage(currentPage, filteredQuizItems);
                };
                pagination.appendChild(li);
            }

            // Bouton "Suivant"
            let nextLi = document.createElement("li");
            nextLi.className = `page-item ${currentPage === pageCount ? 'disabled' : ''}`;
            nextLi.innerHTML = `<a class="page-link" href="#">Suivant</a>`;
            nextLi.onclick = () => {
                if (currentPage < pageCount) {
                    currentPage++;
                    showPage(currentPage, filteredQuizItems);
                }
            };
            pagination.appendChild(nextLi);
        }

        let filteredQuizItems = quizItems;
        
        searchInput.addEventListener("input", function () {
            let filter = this.value.toLowerCase();
            currentPage = 1;
            
            filteredQuizItems = quizItems.filter(quiz => {
                let quizTitle = quiz.querySelector("h4").getAttribute("data-nom");
                let quizTheme = quiz.querySelector("h4").getAttribute("data-theme");
                let quizPseudo = quiz.querySelector("small").textContent.toLowerCase().replace("créé par ", "");
                
                return quizTitle.includes(filter) || 
                       quizTheme.includes(filter) || 
                       quizPseudo.includes(filter) || 
                       filter === "";
            });

            noResultMessage.style.display = filteredQuizItems.length === 0 ? "block" : "none";
            showPage(currentPage, filteredQuizItems);
        });

        // Initialisation de la première page
        showPage(currentPage);
    });
</script>
{% endblock %}