{% extends 'base_template.html.twig' %}

{% block content %}
<div class="container py-5">

    <form action="index.php?controleur=question&methode=saveQuestions" method="POST">
        <input type="hidden" name="idQuizz" value="{{ idQuizz }}">

        <!-- Stepper Navigation -->
        <div class="steps d-flex justify-content-between mb-4">
            {% for i in range(1, nbQuestion) %}
                <div class="step" id="step-label-{{ i }}" onclick="goToStep({{ i }})" style="cursor: pointer;">
                    Question {{ i }}
                </div>
            {% endfor %}
        </div>

        <!-- Stepper Content -->
        {% for i in range(1, nbQuestion) %}
        <div id="step-{{ i }}" class="step-content d-none" style="border: 1px solid #dcdcdc; padding: 15px; border-radius: 6px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
            <!-- Ajout du champ caché pour le numéro -->
            <input type="hidden" name="questions[{{ i }}][numero]" value="{{ i }}">
            
            <!-- Illustration -->
            <div class="row justify-content-center mb-4">
                <div class="col-12 col-md-8 d-flex justify-content-center">
                    {% if image is defined and image is not empty %}
                        <img src="img/quizz/{{ image }}" alt="Image affichée" class="img-fluid d-block mx-auto">
                    {% else %}
                        <img src="img/quizz/default.png" alt="Image par défaut" class="img-fluid d-block mx-auto">
                    {% endif %}
                </div>
            </div>

            <!-- Question -->
            <div class="row justify-content-center mb-4">
                <div class="col-12 col-md-8">
                    <div class="text-center bg-danger text-white py-2 rounded">
                        <input type="text" class="form-control text-center border-0 bg-transparent fw-bold" id="contenu_{{ i }}" name="questions[{{ i }}][contenu]" placeholder="Entrez le contenu de la question" required>
                    </div>
                </div>
            </div>

            <!-- Difficulté -->
            <div class="row justify-content-center mt-4 mb-4">
                <div class="col-12 col-md-8 text-center">
                    <label class="d-block mb-2">Difficulté :</label>
                    <div class="d-flex justify-content-center gap-2">
                        <button type="button" class="btn" onclick="setDifficulty({{ i }}, 'Facile', this)" style="background-color: transparent; border-color: green;">Facile</button>
                        <button type="button" class="btn" onclick="setDifficulty({{ i }}, 'Moyen', this)" style="background-color: transparent; border-color: orange;">Moyen</button>
                        <button type="button" class="btn" onclick="setDifficulty({{ i }}, 'Difficile', this)" style="background-color: transparent; border-color: red;">Difficile</button>
                    </div>
                    <input type="hidden" id="difficulte_{{ i }}" name="questions[{{ i }}][nvDifficulte]" required>
                </div>
            </div>
            

            <!-- Réponses -->
            <div class="row justify-content-center">
                <div class="col-12 col-md-8">
                    <div class="row">
                        <div class="col-6 mb-3">
                            <input type="text" class="form-control bg-transparent border-success border-2" id="bonneReponse_{{ i }}" name="questions[{{ i }}][bonneReponse]" placeholder="Bonne réponse" required>
                        </div>
                        <div class="col-6 mb-3">
                            <input type="text" class="form-control bg-transparent border-danger border-2" id="mauvaiseReponse1_{{ i }}" name="questions[{{ i }}][mauvaiseReponse1]" placeholder="Mauvaise réponse" required>
                        </div>
                        <div class="col-6 mb-3">
                            <input type="text" class="form-control bg-transparent border-danger border-2" id="mauvaiseReponse2_{{ i }}" name="questions[{{ i }}][mauvaiseReponse2]" placeholder="Mauvaise réponse" required>
                        </div>
                        <div class="col-6 mb-3">
                            <input type="text" class="form-control bg-transparent border-danger border-2" id="mauvaiseReponse3_{{ i }}" name="questions[{{ i }}][mauvaiseReponse3]" placeholder="Mauvaise réponse" required>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Navigation -->
            <div class="text-center mt-3">
                {% if i > 1 %}
                <button type="button" class="btn btn-secondary prev-step">Précédent</button>
                {% endif %}
                {% if i < nbQuestion %}
                <button type="button" class="btn btn-primary next-step">Suivant</button>
                {% else %}
                <button type="submit" class="btn btn-success">Enregistrer</button>
                {% endif %}
            </div>
        </div>
        {% endfor %}
    </form>
</div>

<script>
    function setDifficulty(questionIndex, value, button) {
        document.getElementById('difficulte_' + questionIndex).value = value;
        let buttons = button.parentNode.querySelectorAll('button');
        buttons.forEach(btn => {
            btn.style.backgroundColor = 'transparent';
            btn.style.color = ''; 
        });

        button.style.backgroundColor = (value === 'Facile') ? 'green' : (value === 'Moyen') ? 'orange' : 'red';
        button.style.color = 'white';
    }
document.querySelector('form').addEventListener('submit', (e) => {
    console.log('Soumission en cours...');
});
    document.addEventListener('DOMContentLoaded', () => {
        const steps = document.querySelectorAll('.step');
        const contents = document.querySelectorAll('.step-content');
        let currentStep = 0;
    
        function showStep(index) {
            steps.forEach((step, i) => {
                // Activation de l'étape correspondante
                step.classList.toggle('active', i === index);
                step.style.fontWeight = i === index ? 'bold' : 'normal';
                contents[i].classList.toggle('d-none', i !== index);
    
                // Ajustement de la bordure pour l'étape active
                contents[i].style.border = i === index ? '1px solid #A2140A' : '1px solid #dcdcdc';
            });
        }
    
        document.querySelectorAll('.next-step').forEach(button => {
            button.addEventListener('click', () => {
                if (currentStep < steps.length - 1) {
                    currentStep++;
                    showStep(currentStep);
                }
            });
        });
    
        document.querySelectorAll('.prev-step').forEach(button => {
            button.addEventListener('click', () => {
                if (currentStep > 0) {
                    currentStep--;
                    showStep(currentStep);
                }
            });
        });
    
        window.goToStep = function(index) {
            if (index >= 1 && index <= steps.length) {
                currentStep = index - 1;
                showStep(currentStep);
            }
        };
    
        // Initialisation : afficher la première étape
        showStep(currentStep);
    });

</script>
{% endblock %}
